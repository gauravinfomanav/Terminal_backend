openapi: 3.0.3
info:
  title: Stock Watchlist API
  description: |
    A comprehensive REST API for managing stock watchlists in a terminal application.
    
    This API allows users to:
    - Create and manage multiple watchlists
    - Add and remove stocks from watchlists
    - Track stock information including ticker symbols and prices
    - Monitor watchlist performance
    
    The API uses Firebase Firestore for data persistence and provides real-time updates.
  version: 1.0.0
  contact:
    name: Stock Watchlist API Support
    email: support@musaffa.us
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://terminal.musaffa.us
    description: Production server
  - url: http://localhost:3000
    description: Development server

paths:
  /health:
    get:
      summary: Health Check
      description: Verify that the API service is running and responsive
      tags:
        - System
      responses:
        '200':
          description: Service is healthy and operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                    example: success
                    description: Indicates the service status
                  message:
                    type: string
                    example: API is running
                    description: Human-readable status message
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-01-17T10:30:00.000Z"
                    description: Current server timestamp

  /watchlists:
    get:
      summary: Get All Watchlists
      description: Retrieve a list of all watchlists for the authenticated user
      tags:
        - Watchlists
      responses:
        '200':
          description: Successfully retrieved watchlists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Watchlist'
                    description: Array of user's watchlists
                  count:
                    type: integer
                    minimum: 0
                    example: 3
                    description: Total number of watchlists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create New Watchlist
      description: Create a new watchlist with the specified name
      tags:
        - Watchlists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                  example: "My Tech Portfolio"
                  description: Name of the watchlist
            examples:
              tech_portfolio:
                summary: Technology Portfolio
                value:
                  name: "Technology Stocks"
              energy_sector:
                summary: Energy Sector
                value:
                  name: "Energy Sector Watchlist"
      responses:
        '201':
          description: Watchlist created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                    example: success
                  message:
                    type: string
                    example: "Watchlist created successfully"
                  data:
                    $ref: '#/components/schemas/Watchlist'
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /watchlists/{watchlistId}/stocks:
    get:
      summary: Get Stocks in Watchlist
      description: Retrieve all stocks within a specific watchlist
      tags:
        - Stocks
      parameters:
        - name: watchlistId
          in: path
          required: true
          description: Unique identifier of the watchlist
          schema:
            type: string
          example: "watchlist_1758125631041"
      responses:
        '200':
          description: Successfully retrieved stocks from watchlist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Stock'
                    description: Array of stocks in the watchlist
                  count:
                    type: integer
                    minimum: 0
                    example: 5
                    description: Total number of stocks in the watchlist
        '404':
          description: Watchlist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Add Stock to Watchlist
      description: Add a new stock to the specified watchlist
      tags:
        - Stocks
      parameters:
        - name: watchlistId
          in: path
          required: true
          description: Unique identifier of the watchlist
          schema:
            type: string
          example: "watchlist_1758125631041"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ticker
              properties:
                ticker:
                  type: string
                  pattern: '^[A-Z]{1,5}$'
                  example: "AAPL"
                  description: Stock ticker symbol (1-5 uppercase letters)
                current_price:
                  type: number
                  format: float
                  minimum: 0
                  example: 150.25
                  description: Current market price of the stock
            examples:
              apple_stock:
                summary: Apple Inc. Stock
                value:
                  ticker: "AAPL"
                  current_price: 150.25
              google_stock:
                summary: Google Stock
                value:
                  ticker: "GOOGL"
                  current_price: 2800.50
      responses:
        '201':
          description: Stock added to watchlist successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                    example: success
                  message:
                    type: string
                    example: "Stock added to watchlist"
                  data:
                    $ref: '#/components/schemas/Stock'
        '400':
          description: Bad request - Invalid stock data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Watchlist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /watchlists/{watchlistId}/stocks/{ticker}:
    delete:
      summary: Remove Stock from Watchlist
      description: Remove a specific stock from the watchlist using its ticker symbol
      tags:
        - Stocks
      parameters:
        - name: watchlistId
          in: path
          required: true
          description: Unique identifier of the watchlist
          schema:
            type: string
          example: "watchlist_1758125631041"
        - name: ticker
          in: path
          required: true
          description: Stock ticker symbol to remove
          schema:
            type: string
            pattern: '^[A-Z]{1,5}$'
          example: "AAPL"
      responses:
        '200':
          description: Stock removed from watchlist successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                    example: success
                  message:
                    type: string
                    example: "Stock removed from watchlist"
                  data:
                    type: object
                    properties:
                      ticker:
                        type: string
                        example: "AAPL"
                        description: The removed stock's ticker symbol
        '404':
          description: Watchlist or stock not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Watchlist:
      type: object
      description: A collection of stocks that a user wants to monitor
      properties:
        id:
          type: string
          example: "watchlist_1758125631041"
          description: Unique identifier for the watchlist
        name:
          type: string
          example: "My Tech Portfolio"
          description: Human-readable name of the watchlist
        date_created:
          type: string
          format: date-time
          example: "2024-01-17T10:30:00.000Z"
          description: Timestamp when the watchlist was created
        stock_count:
          type: integer
          minimum: 0
          example: 5
          description: Number of stocks currently in the watchlist
      required:
        - id
        - name
        - date_created
        - stock_count

    Stock:
      type: object
      description: A stock entry within a watchlist
      properties:
        id:
          type: string
          example: "AAPL"
          description: Unique identifier (same as ticker)
        ticker:
          type: string
          pattern: '^[A-Z]{1,5}$'
          example: "AAPL"
          description: Stock ticker symbol
        current_price:
          type: number
          format: float
          minimum: 0
          example: 150.25
          description: Current market price of the stock
        date_added:
          type: string
          format: date-time
          example: "2024-01-17T10:30:00.000Z"
          description: Timestamp when the stock was added to the watchlist
      required:
        - id
        - ticker
        - current_price
        - date_added

    Error:
      type: object
      description: Error response format
      properties:
        status:
          type: string
          enum: [error]
          example: error
          description: Indicates an error occurred
        message:
          type: string
          example: "Watchlist not found"
          description: Human-readable error message
      required:
        - status
        - message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for API authentication

security:
  - bearerAuth: []

tags:
  - name: System
    description: System health and status endpoints
  - name: Watchlists
    description: Watchlist management operations
  - name: Stocks
    description: Stock management within watchlists